{"ast":null,"code":"import React,{useState,useEffect,useContext}from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import api from\"../../services/api\";import{AuthContext}from\"../../context/Auth/AuthContext\";import Board from\"react-trello\";import{toast}from\"react-toastify\";import{i18n}from\"../../translate/i18n\";import{useHistory}from\"react-router-dom\";const useStyles=makeStyles(theme=>({root:{display:\"flex\",alignItems:\"center\",padding:theme.spacing(1)},button:{background:\"#10a110\",border:\"none\",padding:\"10px\",color:\"white\",fontWeight:\"bold\",borderRadius:\"5px\"}}));const Kanban=()=>{const classes=useStyles();const history=useHistory();const[tags,setTags]=useState([]);const fetchTags=async()=>{try{var _response$data$lista;const response=await api.get(\"/tags/kanban\");const fetchedTags=(_response$data$lista=response.data.lista)!==null&&_response$data$lista!==void 0?_response$data$lista:[];setTags(fetchedTags);// Fetch tickets after fetching tags\nawait fetchTickets(jsonString);}catch(error){console.log(error);}};useEffect(()=>{fetchTags();},[]);const[file,setFile]=useState({lanes:[]});const[tickets,setTickets]=useState([]);const{user}=useContext(AuthContext);const{profile,queues}=user;const jsonString=user.queues.map(queue=>queue.UserQueue.queueId);const fetchTickets=async jsonString=>{try{const{data}=await api.get(\"/ticket/kanban\",{params:{queueIds:JSON.stringify(jsonString),showAll:profile===\"admin\"}});setTickets(data.tickets);}catch(err){console.log(err);setTickets([]);}};const popularCards=jsonString=>{const filteredTickets=tickets.filter(ticket=>ticket.tags.length===0);const lanes=[{id:\"lane0\",title:i18n.t(\"kanban.open\"),label:filteredTickets.length.toString(),cards:filteredTickets.map(ticket=>({id:ticket.id.toString(),label:\"Ticket nº \"+ticket.id.toString(),description:/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",null,ticket.contact.number,/*#__PURE__*/React.createElement(\"br\",null),ticket.lastMessage),/*#__PURE__*/React.createElement(\"button\",{className:classes.button,onClick:()=>{handleCardClick(ticket.uuid);}},i18n.t(\"kanban.seeTicket\"))),title:ticket.contact.name,draggable:true,href:\"/tickets/\"+ticket.uuid}))},...tags.map(tag=>{const tagsTickets=tickets.filter(ticket=>{const tagIds=ticket.tags.map(tag=>tag.id);return tagIds.includes(tag.id);});return{id:tag.id.toString(),title:tag.name,label:tagsTickets.length.toString(),cards:tagsTickets.map(ticket=>({id:ticket.id.toString(),label:\"Ticket nº \"+ticket.id.toString(),description:/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",null,ticket.contact.number,/*#__PURE__*/React.createElement(\"br\",null),ticket.lastMessage),/*#__PURE__*/React.createElement(\"button\",{className:classes.button,onClick:()=>{handleCardClick(ticket.uuid);}},i18n.t(\"kanban.seeTicket\"))),title:ticket.contact.name,draggable:true,href:\"/tickets/\"+ticket.uuid})),style:{backgroundColor:tag.color,color:\"white\"}};})];setFile({lanes});};const handleCardClick=uuid=>{//console.log(\"Clicked on card with UUID:\", uuid);\nhistory.push(\"/tickets/\"+uuid);};useEffect(()=>{popularCards(jsonString);},[tags,tickets]);const handleCardMove=async(cardId,sourceLaneId,targetLaneId)=>{try{await api.delete(\"/ticket-tags/\".concat(targetLaneId));toast.success(i18n.t(\"kanban.toasts.removed\"));await api.put(\"/ticket-tags/\".concat(targetLaneId,\"/\").concat(sourceLaneId));toast.success(i18n.t(\"kanban.toasts.added\"));}catch(err){console.log(err);}};return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(Board,{data:file,onCardMoveAcrossLanes:handleCardMove,style:{backgroundColor:\"rgba(252, 252, 252, 0.03)\"}}));};export default Kanban;","map":null,"metadata":{},"sourceType":"module"}